class Solution:
    def partition(self, head, x):
        #code here
        l1 = []
        l2 = []
        l3 = []
        while head:
            if head.data<x:
                l1.append(head.data)
            elif head.data==x:
                l2.append(head.data)
            else:
                l3.append(head.data)
            head = head.next
        res = l1+l2+l3
        for i in res:
            print(i, end=" ")

Question link: https://www.geeksforgeeks.org/problems/partition-a-linked-list-around-a-given-value/1?itm_source=geeksforgeeks&itm_medium=article&itm_campaign=bottom_sticky_on_article


#leetcode solution
class Solution:
    def partition(self, head: Optional[ListNode], x: int) -> Optional[ListNode]:
        l1, l2 = ListNode(), ListNode()
        ltail, rtail = l1, l2
        while head:
            if head.val<x:
                ltail.next = head
                ltail = ltail.next
            else:
                rtail.next = head
                rtail = rtail.next
            head = head.next
        ltail.next = l2.next
        rtail.next = None
        return l1.next

Question link: https://leetcode.com/problems/partition-list/description/
